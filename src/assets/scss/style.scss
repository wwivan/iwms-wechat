@import "./variables";

//reset
* {
  box-sizing: border-box;
  outline: none
}
// html {
//   font-size: 13px;
// }

body {
  padding: 0;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  // line-height: 0;
  background: #ffffff;
}
@media screen and (max-width: 414px){
  html {
    font-size: 690%;
  }
}
@media screen and (max-width: 375px){
  html {
    font-size: 625%;
  }
}
@media screen and (max-width: 360px){
  html {
    font-size: 600%;
  }
}
@media screen and (max-width: 320px){
  html {
    font-size: 530.3%;
  }
}


a {
  color: #999
}

p {
  line-height: 0.195rem
}

@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

//text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important
  }
}

//font-size


@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size
  }
}

//text overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//width,height
.w-100 {
  width: 100%;
}

.w-80 {
  width: 80%
}
.w-60 {
  width: 60%
}
.w-90{
  width: 90%
}
.w-20 {
  width: 20%
}
.w-25{
  width: 25%
}
.h-100 {
  height: 100%
}

.h-80 {
  height: 80%
}

.b-0 {
  bottom: 0px;
}

.posi-r {
  position: relative;
}

.posi-f {
  position: fixed;
}

.posi-a {
  position: absolute
}

//flex
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

$flex-jc:(start:flex-start,
  end:flex-end,
  center:center,
  between:space-between,
  around:space-around,
);

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

$flex-ai:(start:flex-start,
  end:flex-end,
  center:center,
  stretch:stretch);

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1
}

//spacing


@each $typeKey,
$type in $spacing-types {

  //.m-1
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size
    }
  }

  //.mx-1,.my-1
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size
    }

    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size
    }
  }

  @each $directionKey,
  $direction in $spacing-direction {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size
      }
    }
  }
}

//btn
.btn {
  border: none;
  border-radius: 0.1538rem;
  font-size: map-get($map: $font-sizes, $key:sm)*$base-font-size
}

//nav
.nav {
  display: flex;

  .nav-item {
    border-bottom: 3px solid transparent;
    padding-bottom: 0.05rem;

    &.active {
      color: map-get($map: $colors, $key: "peach-red");
      border-bottom-color: map-get($colors, "peach-red")
    }
  }

  &.nav-inverse {
    .nav-item {
      color: map-get($colors, "white");

      &.active {
        border-bottom-color: map-get($colors, "white");
      }
    }
  }
}

//sprite
.sprite {
  // background: url(../images/index.png)no-repeat 0 0;
  background-size: 28.8462rem;
  display: inline-block;

  &.sprite-news {
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 63.546% 15.517%;
  }

  &.sprite-arrow {
    width: 0.7692rem;
    height: 0.7692rem;
    background-position: 38.577% 52.076%;
  }

  &.sprite-down-arrow {
    transform: rotate(180deg);
    width: 0.7692rem;
    height: 0.7692rem;
    background-position: 38.577% 52.076%;
  }
}

//borders
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid map-get($colors, "light-0")
  }
}